{
  "timestamp": "2025-05-27T21:15:39.873617",
  "execution_time": 72.79243493080139,
  "summary": {
    "total_tests": 7,
    "passed_tests": 4,
    "failed_tests": 3,
    "success_rate": 57.14285714285714
  },
  "results": [
    {
      "name": "API „Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÁµ±Âêà„ÉÜ„Çπ„Éà",
      "description": "ÂÖ®API„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅÆÁµ±ÂêàÂãï‰ΩúÁ¢∫Ë™ç",
      "success": true,
      "return_code": 0,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /home/igtmtakan/.pyenv/versions/3.13.2/bin/python\ncachedir: .pytest_cache\nrootdir: /home/igtmtakan/workplace/python/scrapyUI/backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.3.0, asyncio-0.26.0, cov-6.1.1, mock-3.14.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 1 item\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_api_endpoints_integration PASSED [100%]\n\n=============================== warnings summary ===============================\napp/database.py:42\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/database.py:42: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: 11 warnings\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\napp/main.py:437\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:437: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"startup\")\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    return self.router.on_event(event_type)\n\napp/main.py:472\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:472: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"shutdown\")\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================= 1 passed, 16 warnings in 10.64s ========================\n",
      "stderr": "/home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n"
    },
    {
      "name": "„Éá„Éº„Çø„Éô„Éº„ÇπÁµ±Âêà„ÉÜ„Çπ„Éà",
      "description": "„Éá„Éº„Çø„Éô„Éº„ÇπÊìç‰Ωú„ÅÆÊï¥ÂêàÊÄßÁ¢∫Ë™ç",
      "success": true,
      "return_code": 0,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /home/igtmtakan/.pyenv/versions/3.13.2/bin/python\ncachedir: .pytest_cache\nrootdir: /home/igtmtakan/workplace/python/scrapyUI/backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.3.0, asyncio-0.26.0, cov-6.1.1, mock-3.14.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 1 item\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_database_integration PASSED [100%]\n\n=============================== warnings summary ===============================\napp/database.py:42\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/database.py:42: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: 11 warnings\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\napp/main.py:437\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:437: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"startup\")\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    return self.router.on_event(event_type)\n\napp/main.py:472\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:472: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"shutdown\")\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================== 1 passed, 16 warnings in 0.65s ========================\n",
      "stderr": "/home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n"
    },
    {
      "name": "„Éï„Ç°„Ç§„É´„Ç∑„Çπ„ÉÜ„É†Áµ±Âêà„ÉÜ„Çπ„Éà",
      "description": "„Éï„Ç°„Ç§„É´Êìç‰Ωú„ÅÆÁµ±ÂêàÁ¢∫Ë™ç",
      "success": false,
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /home/igtmtakan/.pyenv/versions/3.13.2/bin/python\ncachedir: .pytest_cache\nrootdir: /home/igtmtakan/workplace/python/scrapyUI/backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.3.0, asyncio-0.26.0, cov-6.1.1, mock-3.14.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 1 item\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_file_system_integration FAILED [100%]\n\n=================================== FAILURES ===================================\n____________ TestFullSystemIntegration.test_file_system_integration ____________\ntests/integration/test_full_system_integration.py:283: in test_file_system_integration\n    assert response.status_code == 200\nE   assert 405 == 200\nE    +  where 405 = <Response [405 Method Not Allowed]>.status_code\n---------------------------- Captured stdout setup -----------------------------\n\nüöÄ Starting ScrapyUI Integration Test Suite\n============================================================\n2025-05-27 21:14:50,350 - app.main - INFO - üöÄ Starting ScrapyUI Application...\n2025-05-27 21:14:50,350 - app.main - INFO - ‚úÖ ScrapyPlaywrightService initialized\nTask monitoring thread started. PID: 1273471\nTask monitoring started\n2025-05-27 21:14:50,354 - app.main - INFO - üîç Task monitoring system started\nüîÑ Scheduler main loop started\n‚úÖ Scheduler service started\n2025-05-27 21:14:50,358 - app.main - INFO - ‚è∞ Schedule service started\n2025-05-27 21:14:50,358 - app.main - INFO - ‚úÖ ScrapyUI Application started successfully\n‚úÖ ScrapyUI Application started successfully\nüîç Task monitoring system initialized\n‚è∞ Schedule service initialized\n------------------------------ Captured log setup ------------------------------\nINFO     app.main:main.py:443 üöÄ Starting ScrapyUI Application...\nINFO     app.main:main.py:450 ‚úÖ ScrapyPlaywrightService initialized\nINFO     app.main:main.py:454 üîç Task monitoring system started\nINFO     app.main:main.py:458 ‚è∞ Schedule service started\nINFO     app.main:main.py:460 ‚úÖ ScrapyUI Application started successfully\n----------------------------- Captured stdout call -----------------------------\n2025-05-27 21:14:50,363 - app.middleware.error_middleware - INFO - Request started: POST /api/projects/\n2025-05-27 21:14:50,368 - app.api.projects - INFO - Creating new project: File System Test | Extra: {\"project_name\": \"File System Test\", \"description\": \"File system integration test\"}\n2025-05-27 21:14:50,372 - app.api.projects - INFO - Test project directory created: ./scrapy_projects/File System Test\n2025-05-27 21:14:50,382 - app.api.projects - INFO - Project created successfully: File System Test | Extra: {\"project_path\": \"File System Test\"}\n2025-05-27 21:14:50,383 - access - INFO - POST /api/projects/ - 201\n2025-05-27 21:14:50,384 - app.middleware.error_middleware - INFO - Request completed: POST /api/projects/ - 201\n2025-05-27 21:14:50,385 - httpx - INFO - HTTP Request: POST http://testserver/api/projects/ \"HTTP/1.1 201 Created\"\n2025-05-27 21:14:50,387 - app.middleware.error_middleware - INFO - Request started: GET /api/projects/418de350-2ed8-44b2-b5b0-fbe6e25b563b/files\n2025-05-27 21:14:50,387 - access - INFO - GET /api/projects/418de350-2ed8-44b2-b5b0-fbe6e25b563b/files - 405\n2025-05-27 21:14:50,388 - app.middleware.error_middleware - INFO - Request completed: GET /api/projects/418de350-2ed8-44b2-b5b0-fbe6e25b563b/files - 405\n2025-05-27 21:14:50,389 - httpx - INFO - HTTP Request: GET http://testserver/api/projects/418de350-2ed8-44b2-b5b0-fbe6e25b563b/files \"HTTP/1.1 405 Method Not Allowed\"\n------------------------------ Captured log call -------------------------------\nINFO     app.middleware.error_middleware:error_middleware.py:79 Request started: POST /api/projects/\nINFO     app.api.projects:logging_config.py:211 Creating new project: File System Test | Extra: {\"project_name\": \"File System Test\", \"description\": \"File system integration test\"}\nINFO     app.api.projects:projects.py:112 Test project directory created: ./scrapy_projects/File System Test\nINFO     app.api.projects:logging_config.py:211 Project created successfully: File System Test | Extra: {\"project_path\": \"File System Test\"}\nINFO     access:error_handler.py:326 POST /api/projects/ - 201\nINFO     app.middleware.error_middleware:error_middleware.py:94 Request completed: POST /api/projects/ - 201\nINFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/projects/ \"HTTP/1.1 201 Created\"\nINFO     app.middleware.error_middleware:error_middleware.py:79 Request started: GET /api/projects/418de350-2ed8-44b2-b5b0-fbe6e25b563b/files\nINFO     access:error_handler.py:326 GET /api/projects/418de350-2ed8-44b2-b5b0-fbe6e25b563b/files - 405\nINFO     app.middleware.error_middleware:error_middleware.py:94 Request completed: GET /api/projects/418de350-2ed8-44b2-b5b0-fbe6e25b563b/files - 405\nINFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/projects/418de350-2ed8-44b2-b5b0-fbe6e25b563b/files \"HTTP/1.1 405 Method Not Allowed\"\n--------------------------- Captured stdout teardown ---------------------------\n2025-05-27 21:14:50,522 - app.main - INFO - üõë Shutting down ScrapyUI Application...\nTask monitoring thread stopped\nTask monitoring stopped\n2025-05-27 21:14:55,356 - app.main - INFO - üîç Task monitoring system stopped\nüõë Scheduler service stopped\n2025-05-27 21:15:00,357 - app.main - INFO - ‚è∞ Schedule service stopped\n2025-05-27 21:15:00,357 - app.main - INFO - üõë ScrapyUI Application shutdown completed\nüõë ScrapyUI Application shutdown completed\nüîç Task monitoring system stopped\n‚è∞ Schedule service stopped\n\n============================================================\nüéâ ScrapyUI Integration Test Suite Completed\n---------------------------- Captured log teardown -----------------------------\nINFO     app.main:main.py:478 üõë Shutting down ScrapyUI Application...\nINFO     app.main:main.py:485 üîç Task monitoring system stopped\nINFO     app.main:main.py:489 ‚è∞ Schedule service stopped\nINFO     app.main:main.py:491 üõë ScrapyUI Application shutdown completed\n=============================== warnings summary ===============================\napp/database.py:42\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/database.py:42: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: 11 warnings\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\napp/main.py:437\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:437: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"startup\")\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    return self.router.on_event(event_type)\n\napp/main.py:472\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:472: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"shutdown\")\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_file_system_integration\n======================= 1 failed, 16 warnings in 10.60s ========================\n",
      "stderr": "/home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n"
    },
    {
      "name": "WebSocketÁµ±Âêà„ÉÜ„Çπ„Éà",
      "description": "„É™„Ç¢„É´„Çø„Ç§„É†ÈÄö‰ø°„ÅÆÁµ±ÂêàÁ¢∫Ë™ç",
      "success": true,
      "return_code": 0,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /home/igtmtakan/.pyenv/versions/3.13.2/bin/python\ncachedir: .pytest_cache\nrootdir: /home/igtmtakan/workplace/python/scrapyUI/backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.3.0, asyncio-0.26.0, cov-6.1.1, mock-3.14.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 1 item\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_websocket_integration PASSED [100%]\n\n=============================== warnings summary ===============================\napp/database.py:42\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/database.py:42: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: 11 warnings\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\napp/main.py:437\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:437: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"startup\")\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    return self.router.on_event(event_type)\n\napp/main.py:472\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:472: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"shutdown\")\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_websocket_integration\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:884: DeprecationWarning: The event_loop fixture provided by pytest-asyncio has been redefined in\n  /home/igtmtakan/workplace/python/scrapyUI/backend/tests/integration/conftest.py:29\n  Replacing the event_loop fixture with a custom implementation is deprecated\n  and will lead to errors in the future.\n  If you want to request an asyncio event loop with a scope other than function\n  scope, use the \"loop_scope\" argument to the asyncio mark when marking the tests.\n  If you want to return different types of event loops, use the event_loop_policy\n  fixture.\n  \n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================== 1 passed, 17 warnings in 0.58s ========================\n",
      "stderr": "/home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n"
    },
    {
      "name": "„Çª„Ç≠„É•„É™„ÉÜ„Ç£Áµ±Âêà„ÉÜ„Çπ„Éà",
      "description": "Ë™çË®º„ÉªË™çÂèØ„Ç∑„Çπ„ÉÜ„É†„ÅÆÁµ±ÂêàÁ¢∫Ë™ç",
      "success": false,
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /home/igtmtakan/.pyenv/versions/3.13.2/bin/python\ncachedir: .pytest_cache\nrootdir: /home/igtmtakan/workplace/python/scrapyUI/backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.3.0, asyncio-0.26.0, cov-6.1.1, mock-3.14.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 1 item\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_security_integration FAILED [100%]\n\n=================================== FAILURES ===================================\n_____________ TestFullSystemIntegration.test_security_integration ______________\ntests/integration/test_full_system_integration.py:377: in test_security_integration\n    with patch('app.auth.jwt_handler.verify_token') as mock_verify:\n../../../../.pyenv/versions/3.13.2/lib/python3.13/unittest/mock.py:1495: in __enter__\n    original, local = self.get_original()\n../../../../.pyenv/versions/3.13.2/lib/python3.13/unittest/mock.py:1465: in get_original\n    raise AttributeError(\nE   AttributeError: <module 'app.auth.jwt_handler' from '/home/igtmtakan/workplace/python/scrapyUI/backend/app/auth/jwt_handler.py'> does not have the attribute 'verify_token'\n---------------------------- Captured stdout setup -----------------------------\n\nüöÄ Starting ScrapyUI Integration Test Suite\n============================================================\n2025-05-27 21:15:09,618 - app.main - INFO - üöÄ Starting ScrapyUI Application...\n2025-05-27 21:15:09,619 - app.main - INFO - ‚úÖ ScrapyPlaywrightService initialized\nTask monitoring thread started. PID: 1273764Task monitoring started\n2025-05-27 21:15:09,620 - app.main - INFO - üîç Task monitoring system started\n\nüîÑ Scheduler main loop started\n‚úÖ Scheduler service started\n2025-05-27 21:15:09,624 - app.main - INFO - ‚è∞ Schedule service started\n2025-05-27 21:15:09,627 - app.main - INFO - ‚úÖ ScrapyUI Application started successfully\n‚úÖ ScrapyUI Application started successfully\nüîç Task monitoring system initialized\n‚è∞ Schedule service initialized\n------------------------------ Captured log setup ------------------------------\nINFO     app.main:main.py:443 üöÄ Starting ScrapyUI Application...\nINFO     app.main:main.py:450 ‚úÖ ScrapyPlaywrightService initialized\nINFO     app.main:main.py:454 üîç Task monitoring system started\nINFO     app.main:main.py:458 ‚è∞ Schedule service started\nINFO     app.main:main.py:460 ‚úÖ ScrapyUI Application started successfully\n----------------------------- Captured stdout call -----------------------------\n2025-05-27 21:15:09,630 - app.middleware.error_middleware - INFO - Request started: GET /api/projects/\n2025-05-27 21:15:09,636 - access - INFO - GET /api/projects/ - 200\n2025-05-27 21:15:09,637 - app.middleware.error_middleware - INFO - Request completed: GET /api/projects/ - 200\n2025-05-27 21:15:09,638 - httpx - INFO - HTTP Request: GET http://testserver/api/projects/ \"HTTP/1.1 200 OK\"\n------------------------------ Captured log call -------------------------------\nINFO     app.middleware.error_middleware:error_middleware.py:79 Request started: GET /api/projects/\nINFO     access:error_handler.py:326 GET /api/projects/ - 200\nINFO     app.middleware.error_middleware:error_middleware.py:94 Request completed: GET /api/projects/ - 200\nINFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/projects/ \"HTTP/1.1 200 OK\"\n--------------------------- Captured stdout teardown ---------------------------\n2025-05-27 21:15:09,858 - app.main - INFO - üõë Shutting down ScrapyUI Application...\nTask monitoring thread stopped\nTask monitoring stopped\n2025-05-27 21:15:14,628 - app.main - INFO - üîç Task monitoring system stopped\nüõë Scheduler service stopped\n2025-05-27 21:15:19,628 - app.main - INFO - ‚è∞ Schedule service stopped\n2025-05-27 21:15:19,629 - app.main - INFO - üõë ScrapyUI Application shutdown completed\nüõë ScrapyUI Application shutdown completed\nüîç Task monitoring system stopped\n‚è∞ Schedule service stopped\n\n============================================================\nüéâ ScrapyUI Integration Test Suite Completed\n---------------------------- Captured log teardown -----------------------------\nINFO     app.main:main.py:478 üõë Shutting down ScrapyUI Application...\nINFO     app.main:main.py:485 üîç Task monitoring system stopped\nINFO     app.main:main.py:489 ‚è∞ Schedule service stopped\nINFO     app.main:main.py:491 üõë ScrapyUI Application shutdown completed\n=============================== warnings summary ===============================\napp/database.py:42\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/database.py:42: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: 11 warnings\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\napp/main.py:437\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:437: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"startup\")\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    return self.router.on_event(event_type)\n\napp/main.py:472\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:472: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"shutdown\")\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_security_integration\n======================= 1 failed, 16 warnings in 10.61s ========================\n",
      "stderr": "/home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n"
    },
    {
      "name": "ÈùûÂêåÊúüÂá¶ÁêÜÁµ±Âêà„ÉÜ„Çπ„Éà",
      "description": "ÈùûÂêåÊúüÂá¶ÁêÜ„ÅÆÁµ±ÂêàÁ¢∫Ë™ç",
      "success": false,
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /home/igtmtakan/.pyenv/versions/3.13.2/bin/python\ncachedir: .pytest_cache\nrootdir: /home/igtmtakan/workplace/python/scrapyUI/backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.3.0, asyncio-0.26.0, cov-6.1.1, mock-3.14.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 1 item\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_async_operations_integration FAILED [100%]\n\n=================================== FAILURES ===================================\n_________ TestFullSystemIntegration.test_async_operations_integration __________\ntests/integration/test_full_system_integration.py:392: in test_async_operations_integration\n    async with AsyncClient(app=app, base_url=\"http://test\") as async_client:\nE   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'\n---------------------------- Captured stdout setup -----------------------------\n\nüöÄ Starting ScrapyUI Integration Test Suite\n============================================================\n--------------------------- Captured stdout teardown ---------------------------\n\n============================================================\nüéâ ScrapyUI Integration Test Suite Completed\n=============================== warnings summary ===============================\napp/database.py:42\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/database.py:42: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: 11 warnings\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\napp/main.py:437\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:437: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"startup\")\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    return self.router.on_event(event_type)\n\napp/main.py:472\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:472: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"shutdown\")\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_async_operations_integration\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:884: DeprecationWarning: The event_loop fixture provided by pytest-asyncio has been redefined in\n  /home/igtmtakan/workplace/python/scrapyUI/backend/tests/integration/conftest.py:29\n  Replacing the event_loop fixture with a custom implementation is deprecated\n  and will lead to errors in the future.\n  If you want to request an asyncio event loop with a scope other than function\n  scope, use the \"loop_scope\" argument to the asyncio mark when marking the tests.\n  If you want to return different types of event loops, use the event_loop_policy\n  fixture.\n  \n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_async_operations_integration\n======================== 1 failed, 17 warnings in 0.71s ========================\n",
      "stderr": "/home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n"
    },
    {
      "name": "„É≠„Ç∞Áµ±Âêà„ÉÜ„Çπ„Éà",
      "description": "„É≠„Ç∞„Ç∑„Çπ„ÉÜ„É†„ÅÆÁµ±ÂêàÁ¢∫Ë™ç",
      "success": true,
      "return_code": 0,
      "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /home/igtmtakan/.pyenv/versions/3.13.2/bin/python\ncachedir: .pytest_cache\nrootdir: /home/igtmtakan/workplace/python/scrapyUI/backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.3.0, asyncio-0.26.0, cov-6.1.1, mock-3.14.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 1 item\n\ntests/integration/test_full_system_integration.py::TestFullSystemIntegration::test_logging_integration PASSED [100%]\n\n=============================== warnings summary ===============================\napp/database.py:42\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/database.py:42: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: 11 warnings\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\napp/main.py:437\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:437: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"startup\")\n\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n../../../../.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495\n  /home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/fastapi/applications.py:4495: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    return self.router.on_event(event_type)\n\napp/main.py:472\n  /home/igtmtakan/workplace/python/scrapyUI/backend/app/main.py:472: DeprecationWarning: \n          on_event is deprecated, use lifespan event handlers instead.\n  \n          Read more about it in the\n          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n          \n    @app.on_event(\"shutdown\")\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n======================= 1 passed, 16 warnings in 10.60s ========================\n",
      "stderr": "/home/igtmtakan/.pyenv/versions/3.13.2/lib/python3.13/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n"
    }
  ]
}